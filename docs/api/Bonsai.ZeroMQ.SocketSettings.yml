### YamlMime:ManagedReference
items:
- uid: Bonsai.ZeroMQ.SocketSettings
  commentId: T:Bonsai.ZeroMQ.SocketSettings
  id: SocketSettings
  parent: Bonsai.ZeroMQ
  children:
  - Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection(System.Char)
  - Bonsai.ZeroMQ.SocketSettings.ConnectionString(Bonsai.ZeroMQ.SocketSettings.SocketConnection)
  - Bonsai.ZeroMQ.SocketSettings.ProtocolString(Bonsai.ZeroMQ.SocketSettings.SocketProtocol)
  - Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol(System.String)
  langs:
  - csharp
  - vb
  name: SocketSettings
  nameWithType: SocketSettings
  fullName: Bonsai.ZeroMQ.SocketSettings
  type: Class
  source:
    remote:
      path: src/Bonsai.ZeroMQ/SocketSettings.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: SocketSettings
    path: ../src/Bonsai.ZeroMQ/SocketSettings.cs
    startLine: 7
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nUtility definitions and methods for defining socket settings.\n"
  example: []
  syntax:
    content: public static class SocketSettings
    content.vb: Public Module SocketSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection(System.Char)
  commentId: M:Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection(System.Char)
  id: CharAsSocketConnection(System.Char)
  parent: Bonsai.ZeroMQ.SocketSettings
  langs:
  - csharp
  - vb
  name: CharAsSocketConnection(Char)
  nameWithType: SocketSettings.CharAsSocketConnection(Char)
  fullName: Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection(System.Char)
  type: Method
  source:
    remote:
      path: src/Bonsai.ZeroMQ/SocketSettings.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: CharAsSocketConnection
    path: ../src/Bonsai.ZeroMQ/SocketSettings.cs
    startLine: 53
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nConverts a character specifying the socket connection type to the appropriate <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketConnection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static SocketSettings.SocketConnection CharAsSocketConnection(char inputChar)
    parameters:
    - id: inputChar
      type: System.Char
      description: "\nThe socket connection character.\n"
    return:
      type: Bonsai.ZeroMQ.SocketSettings.SocketConnection
      description: "\nA <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketConnection\" data-throw-if-not-resolved=\"false\"></xref> of the corresponding connection type.\n"
    content.vb: Public Shared Function CharAsSocketConnection(inputChar As Char) As SocketSettings.SocketConnection
  overload: Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol(System.String)
  commentId: M:Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol(System.String)
  id: StringAsSocketProtocol(System.String)
  parent: Bonsai.ZeroMQ.SocketSettings
  langs:
  - csharp
  - vb
  name: StringAsSocketProtocol(String)
  nameWithType: SocketSettings.StringAsSocketProtocol(String)
  fullName: Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/Bonsai.ZeroMQ/SocketSettings.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: StringAsSocketProtocol
    path: ../src/Bonsai.ZeroMQ/SocketSettings.cs
    startLine: 75
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nConverts a string specifying the socket protocol to the appropriate <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketProtocol\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static SocketSettings.SocketProtocol StringAsSocketProtocol(string inputString)
    parameters:
    - id: inputString
      type: System.String
      description: "\nThe socket protocol string.\n"
    return:
      type: Bonsai.ZeroMQ.SocketSettings.SocketProtocol
      description: "\nA <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketProtocol\" data-throw-if-not-resolved=\"false\"></xref> of the corresponding protocol type.\n"
    content.vb: Public Shared Function StringAsSocketProtocol(inputString As String) As SocketSettings.SocketProtocol
  overload: Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Bonsai.ZeroMQ.SocketSettings.ConnectionString(Bonsai.ZeroMQ.SocketSettings.SocketConnection)
  commentId: M:Bonsai.ZeroMQ.SocketSettings.ConnectionString(Bonsai.ZeroMQ.SocketSettings.SocketConnection)
  id: ConnectionString(Bonsai.ZeroMQ.SocketSettings.SocketConnection)
  parent: Bonsai.ZeroMQ.SocketSettings
  langs:
  - csharp
  - vb
  name: ConnectionString(SocketSettings.SocketConnection)
  nameWithType: SocketSettings.ConnectionString(SocketSettings.SocketConnection)
  fullName: Bonsai.ZeroMQ.SocketSettings.ConnectionString(Bonsai.ZeroMQ.SocketSettings.SocketConnection)
  type: Method
  source:
    remote:
      path: src/Bonsai.ZeroMQ/SocketSettings.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: ConnectionString
    path: ../src/Bonsai.ZeroMQ/SocketSettings.cs
    startLine: 99
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nConverts a <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketConnection\" data-throw-if-not-resolved=\"false\"></xref> to a representative string.\n"
  example: []
  syntax:
    content: public static string ConnectionString(SocketSettings.SocketConnection connection)
    parameters:
    - id: connection
      type: Bonsai.ZeroMQ.SocketSettings.SocketConnection
      description: "\nThe <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketConnection\" data-throw-if-not-resolved=\"false\"></xref> type.\n"
    return:
      type: System.String
      description: "\nA string representing the socket connection type.\n"
    content.vb: Public Shared Function ConnectionString(connection As SocketSettings.SocketConnection) As String
  overload: Bonsai.ZeroMQ.SocketSettings.ConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Bonsai.ZeroMQ.SocketSettings.ProtocolString(Bonsai.ZeroMQ.SocketSettings.SocketProtocol)
  commentId: M:Bonsai.ZeroMQ.SocketSettings.ProtocolString(Bonsai.ZeroMQ.SocketSettings.SocketProtocol)
  id: ProtocolString(Bonsai.ZeroMQ.SocketSettings.SocketProtocol)
  parent: Bonsai.ZeroMQ.SocketSettings
  langs:
  - csharp
  - vb
  name: ProtocolString(SocketSettings.SocketProtocol)
  nameWithType: SocketSettings.ProtocolString(SocketSettings.SocketProtocol)
  fullName: Bonsai.ZeroMQ.SocketSettings.ProtocolString(Bonsai.ZeroMQ.SocketSettings.SocketProtocol)
  type: Method
  source:
    remote:
      path: src/Bonsai.ZeroMQ/SocketSettings.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: ProtocolString
    path: ../src/Bonsai.ZeroMQ/SocketSettings.cs
    startLine: 120
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nConverts a <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketProtocol\" data-throw-if-not-resolved=\"false\"></xref> to a representative string.\n"
  example: []
  syntax:
    content: public static string ProtocolString(SocketSettings.SocketProtocol protocol)
    parameters:
    - id: protocol
      type: Bonsai.ZeroMQ.SocketSettings.SocketProtocol
      description: "\nThe <xref href=\"Bonsai.ZeroMQ.SocketSettings.SocketProtocol\" data-throw-if-not-resolved=\"false\"></xref> type.\n"
    return:
      type: System.String
      description: "\nA string representing the socket protocol type.\n"
    content.vb: Public Shared Function ProtocolString(protocol As SocketSettings.SocketProtocol) As String
  overload: Bonsai.ZeroMQ.SocketSettings.ProtocolString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Bonsai.ZeroMQ
  commentId: N:Bonsai.ZeroMQ
  name: Bonsai.ZeroMQ
  nameWithType: Bonsai.ZeroMQ
  fullName: Bonsai.ZeroMQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bonsai.ZeroMQ.SocketSettings.SocketConnection
  commentId: T:Bonsai.ZeroMQ.SocketSettings.SocketConnection
  parent: Bonsai.ZeroMQ
  name: SocketSettings.SocketConnection
  nameWithType: SocketSettings.SocketConnection
  fullName: Bonsai.ZeroMQ.SocketSettings.SocketConnection
- uid: Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection*
  commentId: Overload:Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection
  name: CharAsSocketConnection
  nameWithType: SocketSettings.CharAsSocketConnection
  fullName: Bonsai.ZeroMQ.SocketSettings.CharAsSocketConnection
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Bonsai.ZeroMQ.SocketSettings.SocketProtocol
  commentId: T:Bonsai.ZeroMQ.SocketSettings.SocketProtocol
  parent: Bonsai.ZeroMQ
  name: SocketSettings.SocketProtocol
  nameWithType: SocketSettings.SocketProtocol
  fullName: Bonsai.ZeroMQ.SocketSettings.SocketProtocol
- uid: Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol*
  commentId: Overload:Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol
  name: StringAsSocketProtocol
  nameWithType: SocketSettings.StringAsSocketProtocol
  fullName: Bonsai.ZeroMQ.SocketSettings.StringAsSocketProtocol
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Bonsai.ZeroMQ.SocketSettings.ConnectionString*
  commentId: Overload:Bonsai.ZeroMQ.SocketSettings.ConnectionString
  name: ConnectionString
  nameWithType: SocketSettings.ConnectionString
  fullName: Bonsai.ZeroMQ.SocketSettings.ConnectionString
- uid: Bonsai.ZeroMQ.SocketSettings.ProtocolString*
  commentId: Overload:Bonsai.ZeroMQ.SocketSettings.ProtocolString
  name: ProtocolString
  nameWithType: SocketSettings.ProtocolString
  fullName: Bonsai.ZeroMQ.SocketSettings.ProtocolString
