### YamlMime:ManagedReference
items:
- uid: Bonsai.ZeroMQ.Response
  commentId: T:Bonsai.ZeroMQ.Response
  id: Response
  parent: Bonsai.ZeroMQ
  children:
  - Bonsai.ZeroMQ.Response.ConnectionId
  - Bonsai.ZeroMQ.Response.Process(System.IObservable{Bonsai.Osc.Message})
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: Response
  fullName: Bonsai.ZeroMQ.Response
  type: Class
  source:
    remote:
      path: src/Bonsai.ZeroMQ/Response.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: Response
    path: ../src/Bonsai.ZeroMQ/Response.cs
    startLine: 13
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nRepresents an operator that creates a Response socket to send sequences of <xref href=\"Bonsai.Osc.Message\" data-throw-if-not-resolved=\"false\"></xref> in response to a <xref href=\"Bonsai.ZeroMQ.Request\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class Response : Combinator<Message, ZeroMQMessage>'
    content.vb: >-
      Public Class Response
          Inherits Combinator(Of Message, ZeroMQMessage)
  inheritance:
  - System.Object
  - Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}
  inheritedMembers:
  - Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}.Process(System.IObservable{Bonsai.Osc.Message})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Bonsai.ZeroMQ.Response.ConnectionId
  commentId: P:Bonsai.ZeroMQ.Response.ConnectionId
  id: ConnectionId
  parent: Bonsai.ZeroMQ.Response
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: Response.ConnectionId
  fullName: Bonsai.ZeroMQ.Response.ConnectionId
  type: Property
  source:
    remote:
      path: src/Bonsai.ZeroMQ/Response.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: ConnectionId
    path: ../src/Bonsai.ZeroMQ/Response.cs
    startLine: 18
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nGets or sets a value specifying the <xref href=\"Bonsai.ZeroMQ.ConnectionId\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Bonsai.ZeroMQ.Response\" data-throw-if-not-resolved=\"false\"></xref> socket.\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ConnectionIdConverter))]

      public ConnectionId ConnectionId { get; set; }
    parameters: []
    return:
      type: Bonsai.ZeroMQ.ConnectionId
    content.vb: >-
      <TypeConverter(GetType(ConnectionIdConverter))>

      Public Property ConnectionId As ConnectionId
  overload: Bonsai.ZeroMQ.Response.ConnectionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bonsai.ZeroMQ.Response.Process(System.IObservable{Bonsai.Osc.Message})
  commentId: M:Bonsai.ZeroMQ.Response.Process(System.IObservable{Bonsai.Osc.Message})
  id: Process(System.IObservable{Bonsai.Osc.Message})
  parent: Bonsai.ZeroMQ.Response
  langs:
  - csharp
  - vb
  name: Process(IObservable<Message>)
  nameWithType: Response.Process(IObservable<Message>)
  fullName: Bonsai.ZeroMQ.Response.Process(System.IObservable<Bonsai.Osc.Message>)
  type: Method
  source:
    remote:
      path: src/Bonsai.ZeroMQ/Response.cs
      branch: issue-1-docs
      repo: https://github.com/RoboDoig/Bonsai.ZeroMQ.git
    id: Process
    path: ../src/Bonsai.ZeroMQ/Response.cs
    startLine: 30
  assemblies:
  - Bonsai.ZeroMQ
  namespace: Bonsai.ZeroMQ
  summary: "\nCreates a response socket with the specified <xref href=\"Bonsai.ZeroMQ.ConnectionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override IObservable<ZeroMQMessage> Process(IObservable<Message> source)
    parameters:
    - id: source
      type: System.IObservable{Bonsai.Osc.Message}
      description: "\nA <xref href=\"Bonsai.Osc.Message\" data-throw-if-not-resolved=\"false\"></xref> sequence to be sent by the socket.\n"
    return:
      type: System.IObservable{Bonsai.ZeroMQ.ZeroMQMessage}
      description: "\nA <xref href=\"Bonsai.ZeroMQ.ZeroMQMessage\" data-throw-if-not-resolved=\"false\"></xref> sequence representing the messages sent by the socket.\n"
    content.vb: Public Overrides Function Process(source As IObservable(Of Message)) As IObservable(Of ZeroMQMessage)
  overridden: Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}.Process(System.IObservable{Bonsai.Osc.Message})
  overload: Bonsai.ZeroMQ.Response.Process*
  nameWithType.vb: Response.Process(IObservable(Of Message))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Bonsai.ZeroMQ.Response.Process(System.IObservable(Of Bonsai.Osc.Message))
  name.vb: Process(IObservable(Of Message))
references:
- uid: Bonsai.Osc.Message
  commentId: T:Bonsai.Osc.Message
  isExternal: true
- uid: Bonsai.ZeroMQ.Request
  commentId: T:Bonsai.ZeroMQ.Request
  name: Request
  nameWithType: Request
  fullName: Bonsai.ZeroMQ.Request
- uid: Bonsai.ZeroMQ
  commentId: N:Bonsai.ZeroMQ
  name: Bonsai.ZeroMQ
  nameWithType: Bonsai.ZeroMQ
  fullName: Bonsai.ZeroMQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}
  commentId: T:Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}
  parent: Bonsai
  definition: Bonsai.Combinator`2
  name: Combinator<Message, ZeroMQMessage>
  nameWithType: Combinator<Message, ZeroMQMessage>
  fullName: Bonsai.Combinator<Bonsai.Osc.Message, Bonsai.ZeroMQ.ZeroMQMessage>
  nameWithType.vb: Combinator(Of Message, ZeroMQMessage)
  fullName.vb: Bonsai.Combinator(Of Bonsai.Osc.Message, Bonsai.ZeroMQ.ZeroMQMessage)
  name.vb: Combinator(Of Message, ZeroMQMessage)
  spec.csharp:
  - uid: Bonsai.Combinator`2
    name: Combinator
    nameWithType: Combinator
    fullName: Bonsai.Combinator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Bonsai.Osc.Message
    name: Message
    nameWithType: Message
    fullName: Bonsai.Osc.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bonsai.ZeroMQ.ZeroMQMessage
    name: ZeroMQMessage
    nameWithType: ZeroMQMessage
    fullName: Bonsai.ZeroMQ.ZeroMQMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Bonsai.Combinator`2
    name: Combinator
    nameWithType: Combinator
    fullName: Bonsai.Combinator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Bonsai.Osc.Message
    name: Message
    nameWithType: Message
    fullName: Bonsai.Osc.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bonsai.ZeroMQ.ZeroMQMessage
    name: ZeroMQMessage
    nameWithType: ZeroMQMessage
    fullName: Bonsai.ZeroMQ.ZeroMQMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}.Process(System.IObservable{Bonsai.Osc.Message})
  commentId: M:Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}.Process(System.IObservable{Bonsai.Osc.Message})
  parent: Bonsai.Combinator{Bonsai.Osc.Message,Bonsai.ZeroMQ.ZeroMQMessage}
  definition: Bonsai.Combinator`2.Process(System.IObservable{`0})
  name: Process(IObservable<Message>)
  nameWithType: Combinator<Message, ZeroMQMessage>.Process(IObservable<Message>)
  fullName: Bonsai.Combinator<Bonsai.Osc.Message, Bonsai.ZeroMQ.ZeroMQMessage>.Process(System.IObservable<Bonsai.Osc.Message>)
  nameWithType.vb: Combinator(Of Message, ZeroMQMessage).Process(IObservable(Of Message))
  fullName.vb: Bonsai.Combinator(Of Bonsai.Osc.Message, Bonsai.ZeroMQ.ZeroMQMessage).Process(System.IObservable(Of Bonsai.Osc.Message))
  name.vb: Process(IObservable(Of Message))
  spec.csharp:
  - uid: Bonsai.Combinator`2.Process(System.IObservable{`0})
    name: Process
    nameWithType: Combinator<Message, ZeroMQMessage>.Process
    fullName: Bonsai.Combinator<Bonsai.Osc.Message, Bonsai.ZeroMQ.ZeroMQMessage>.Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Bonsai.Osc.Message
    name: Message
    nameWithType: Message
    fullName: Bonsai.Osc.Message
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bonsai.Combinator`2.Process(System.IObservable{`0})
    name: Process
    nameWithType: Combinator(Of Message, ZeroMQMessage).Process
    fullName: Bonsai.Combinator(Of Bonsai.Osc.Message, Bonsai.ZeroMQ.ZeroMQMessage).Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Bonsai.Osc.Message
    name: Message
    nameWithType: Message
    fullName: Bonsai.Osc.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bonsai.Combinator`2
  commentId: T:Bonsai.Combinator`2
  isExternal: true
  name: Combinator<TSource, TResult>
  nameWithType: Combinator<TSource, TResult>
  fullName: Bonsai.Combinator<TSource, TResult>
  nameWithType.vb: Combinator(Of TSource, TResult)
  fullName.vb: Bonsai.Combinator(Of TSource, TResult)
  name.vb: Combinator(Of TSource, TResult)
  spec.csharp:
  - uid: Bonsai.Combinator`2
    name: Combinator
    nameWithType: Combinator
    fullName: Bonsai.Combinator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Bonsai.Combinator`2
    name: Combinator
    nameWithType: Combinator
    fullName: Bonsai.Combinator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Bonsai
  commentId: N:Bonsai
  isExternal: true
  name: Bonsai
  nameWithType: Bonsai
  fullName: Bonsai
- uid: Bonsai.Combinator`2.Process(System.IObservable{`0})
  commentId: M:Bonsai.Combinator`2.Process(System.IObservable{`0})
  isExternal: true
  name: Process(IObservable<TSource>)
  nameWithType: Combinator<TSource, TResult>.Process(IObservable<TSource>)
  fullName: Bonsai.Combinator<TSource, TResult>.Process(System.IObservable<TSource>)
  nameWithType.vb: Combinator(Of TSource, TResult).Process(IObservable(Of TSource))
  fullName.vb: Bonsai.Combinator(Of TSource, TResult).Process(System.IObservable(Of TSource))
  name.vb: Process(IObservable(Of TSource))
  spec.csharp:
  - uid: Bonsai.Combinator`2.Process(System.IObservable{`0})
    name: Process
    nameWithType: Combinator<TSource, TResult>.Process
    fullName: Bonsai.Combinator<TSource, TResult>.Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bonsai.Combinator`2.Process(System.IObservable{`0})
    name: Process
    nameWithType: Combinator(Of TSource, TResult).Process
    fullName: Bonsai.Combinator(Of TSource, TResult).Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Bonsai.ZeroMQ.ConnectionId
  commentId: T:Bonsai.ZeroMQ.ConnectionId
  parent: Bonsai.ZeroMQ
  name: ConnectionId
  nameWithType: ConnectionId
  fullName: Bonsai.ZeroMQ.ConnectionId
- uid: Bonsai.ZeroMQ.Response
  commentId: T:Bonsai.ZeroMQ.Response
  name: Response
  nameWithType: Response
  fullName: Bonsai.ZeroMQ.Response
- uid: Bonsai.ZeroMQ.Response.ConnectionId*
  commentId: Overload:Bonsai.ZeroMQ.Response.ConnectionId
  name: ConnectionId
  nameWithType: Response.ConnectionId
  fullName: Bonsai.ZeroMQ.Response.ConnectionId
- uid: Bonsai.ZeroMQ.ZeroMQMessage
  commentId: T:Bonsai.ZeroMQ.ZeroMQMessage
  name: ZeroMQMessage
  nameWithType: ZeroMQMessage
  fullName: Bonsai.ZeroMQ.ZeroMQMessage
- uid: Bonsai.ZeroMQ.Response.Process*
  commentId: Overload:Bonsai.ZeroMQ.Response.Process
  name: Process
  nameWithType: Response.Process
  fullName: Bonsai.ZeroMQ.Response.Process
- uid: System.IObservable{Bonsai.Osc.Message}
  commentId: T:System.IObservable{Bonsai.Osc.Message}
  parent: System
  definition: System.IObservable`1
  name: IObservable<Message>
  nameWithType: IObservable<Message>
  fullName: System.IObservable<Bonsai.Osc.Message>
  nameWithType.vb: IObservable(Of Message)
  fullName.vb: System.IObservable(Of Bonsai.Osc.Message)
  name.vb: IObservable(Of Message)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Bonsai.Osc.Message
    name: Message
    nameWithType: Message
    fullName: Bonsai.Osc.Message
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Bonsai.Osc.Message
    name: Message
    nameWithType: Message
    fullName: Bonsai.Osc.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable{Bonsai.ZeroMQ.ZeroMQMessage}
  commentId: T:System.IObservable{Bonsai.ZeroMQ.ZeroMQMessage}
  parent: System
  definition: System.IObservable`1
  name: IObservable<ZeroMQMessage>
  nameWithType: IObservable<ZeroMQMessage>
  fullName: System.IObservable<Bonsai.ZeroMQ.ZeroMQMessage>
  nameWithType.vb: IObservable(Of ZeroMQMessage)
  fullName.vb: System.IObservable(Of Bonsai.ZeroMQ.ZeroMQMessage)
  name.vb: IObservable(Of ZeroMQMessage)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Bonsai.ZeroMQ.ZeroMQMessage
    name: ZeroMQMessage
    nameWithType: ZeroMQMessage
    fullName: Bonsai.ZeroMQ.ZeroMQMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Bonsai.ZeroMQ.ZeroMQMessage
    name: ZeroMQMessage
    nameWithType: ZeroMQMessage
    fullName: Bonsai.ZeroMQ.ZeroMQMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
